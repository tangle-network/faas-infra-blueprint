name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Rust tests
  rust-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, nightly]

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build all packages
      run: |
        cargo build --all --verbose
        cargo build --all --release --verbose

    - name: Run unit tests
      run: cargo test --all --verbose

    - name: Run clippy
      run: cargo clippy --all -- -D warnings

    - name: Check formatting
      run: cargo fmt --all -- --check

  # Integration tests with Docker
  integration-tests:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Start Docker
      run: |
        docker version
        docker pull alpine:latest
        docker pull python:3.11-slim
        docker pull node:20-slim

    - name: Build gateway server
      run: cargo build --package faas-gateway-server --release

    - name: Run integration tests
      run: |
        # Start gateway in background
        cargo run --package faas-gateway-server --release &
        GATEWAY_PID=$!

        # Wait for gateway to be ready
        sleep 5

        # Test health endpoint
        curl -f http://localhost:8080/health || exit 1

        # Run integration tests
        cargo test --package faas-integration-tests

        # Stop gateway
        kill $GATEWAY_PID

  # Python SDK tests
  python-sdk-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        cd sdk/python
        pip install -e .
        pip install pytest pytest-asyncio pytest-cov
        pip install -r requirements.txt

    - name: Run Python SDK tests
      run: |
        cd sdk/python
        pytest tests/ -v --cov=faas_sdk --cov-report=xml

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./sdk/python/coverage.xml
        flags: python-sdk

  # TypeScript SDK tests
  typescript-sdk-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        cd sdk/typescript
        npm ci

    - name: Build TypeScript SDK
      run: |
        cd sdk/typescript
        npm run build

    - name: Run TypeScript SDK tests
      run: |
        cd sdk/typescript
        npm test

    - name: Lint TypeScript
      run: |
        cd sdk/typescript
        npm run lint

  # Test examples compilation
  examples-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build GPU service example
      run: cargo build --package gpu-service-example --release

    - name: Build agent branching example
      run: cargo build --package agent-branching-example --release

    - name: Build quickstart example
      run: cargo build --package quickstart --release

    - name: Check Python scripts
      run: |
        python3 -m py_compile examples/gpu-service/scripts/load_model.py
        python3 -m py_compile examples/gpu-service/scripts/inference.py

  # End-to-end tests
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [rust-tests, integration-tests]

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Setup Docker
      run: |
        docker pull alpine:latest
        docker pull python:3.11-slim

    - name: Run full E2E test suite
      run: |
        # Build everything
        cargo build --all --release

        # Start gateway
        cargo run --package faas-gateway-server --release &
        GATEWAY_PID=$!
        sleep 5

        # Run E2E tests
        ./verify-all.sh

        # Test Python gateway integration
        ./test-gateway.py

        # Stop gateway
        kill $GATEWAY_PID

  # Security audit
  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Run cargo audit
      run: |
        cargo install cargo-audit
        cargo audit