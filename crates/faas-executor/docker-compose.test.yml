version: '3.8'

services:
  # Test container with CRIU capabilities
  criu-tests:
    build:
      context: ../..
      dockerfile: crates/faas-executor/Dockerfile.test
    image: faas-executor-tests
    container_name: faas-criu-tests
    privileged: true  # Required for CRIU
    cap_add:
      - SYS_PTRACE  # Required for CRIU checkpoint/restore
      - SYS_ADMIN   # Required for namespaces
      - NET_ADMIN   # Network namespace operations
    security_opt:
      - seccomp:unconfined  # CRIU needs this
      - apparmor:unconfined # Disable AppArmor restrictions
    volumes:
      # Mount Docker socket for nested Docker operations
      - /var/run/docker.sock:/var/run/docker.sock
      # Share source code for faster iteration
      - ../..:/workspace:cached
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=debug
    command: |
      bash -c "
        echo '=== Testing CRIU in Container ==='
        # Test if CRIU works
        criu check || echo 'CRIU check failed - some features may not work'

        # Run the test suite
        /run_tests.sh
      "

  # Firecracker test container (limited without KVM)
  firecracker-mock:
    build:
      context: ../..
      dockerfile: crates/faas-executor/Dockerfile.test
    image: faas-executor-tests
    container_name: faas-firecracker-mock
    privileged: true
    devices:
      # Try to pass through KVM if available (won't work on Mac)
      - /dev/kvm:/dev/kvm
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    volumes:
      - ../..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=debug
    command: |
      bash -c "
        echo '=== Testing Firecracker Mock in Container ==='
        # Check for KVM
        if [ -e /dev/kvm ]; then
          echo 'KVM available - Firecracker can run'
        else
          echo 'No KVM - Firecracker will run in mock mode only'
        fi

        # Create mock Firecracker responses for testing
        echo '#!/bin/bash
        case \"$1\" in
          --version)
            echo \"Firecracker v1.4.0\"
            ;;
          *)
            echo \"Mock Firecracker: KVM not available on macOS Docker\"
            exit 1
            ;;
        esac' > /usr/local/bin/firecracker-mock
        chmod +x /usr/local/bin/firecracker-mock

        # Run tests with mock
        cargo +nightly test --package faas-executor --lib firecracker --nocapture
      "

  # Integration test runner
  integration-tests:
    build:
      context: ../..
      dockerfile: crates/faas-executor/Dockerfile.test
    image: faas-executor-tests
    container_name: faas-integration-tests
    network_mode: host  # For better network testing
    privileged: true
    cap_add:
      - ALL  # All capabilities for comprehensive testing
    volumes:
      - ../..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=info
      - DOCKER_HOST=unix:///var/run/docker.sock
    command: |
      bash -c "
        echo '=== Running All Integration Tests ==='

        # Build first
        cargo +nightly build --package faas-executor --release

        # Run different test suites
        echo '>> Docker Integration Tests'
        cargo +nightly test --package faas-executor --test docker_integration -- --ignored --nocapture

        echo '>> Security Tests'
        cargo +nightly test --package faas-executor --test security -- --ignored --nocapture

        echo '>> Platform Tests'
        cargo +nightly test --package faas-executor --lib platform -- --nocapture

        echo '=== All Tests Complete ==='
      "